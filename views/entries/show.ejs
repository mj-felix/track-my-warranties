<% layout('layouts/boilerplate')%>
<h1>Warranty Details</h1>
Product Name: <%= entry.productName %><br>
Date Purchased: <%= entry.datePurchased.toDateString() %><br>
Warranty Due Date: <%= entry.dateExpired.toDateString() %><br>
Store Name: <%= entry.storeName %><br>
Additional Comment: <%= entry.additionalComment %><br>
Date Created: <%= entry.dateCreated %><br>
Date Last Modified: <%= entry.dateModified %><br>
<a href="/entries/<%= entry._id %>/edit">Edit Warranty</a>
<form action="/entries/<%= entry._id %>?_method=DELETE" method="POST">
    <button class="btn btn-danger my-3">Delete Warranty</button>
</form>
<h2>Files</h2>
<div class='my-2'>
    <input type="file" id="file" name="file" required accept="image/*,.pdf">
</div>
<div id="files">
    <ul>
        <% for (let file of entry.files){ %>
        <li><a href="#" rel="/entries/<%=entry._id%>/files/<%= file.storedFileName %>"
                class="my-1 btn btn-danger btn-sm deleteFile">Delete</a> <a href="<%= file.url %>"
                target="_blank"><%= file.originalFileName %> -
                <%= (file.size/1024/1024).toFixed(2) %>MB</a>
        </li>
        <% } %>
    </ul>
</div>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
    const uploadFile = async (event) => {
        event.preventDefault();
        event.stopPropagation();

        let formData = new FormData();
        formData.append("file", event.target.files[0]);
        axios.post('/entries/<%=entry._id%>/files', formData, {
            headers: {
                "Content-Type": "multipart/form-data"
            }
        }).then((res) => {
            console.log(res.data);
            if (typeof res.data.file !== 'undefined') {
                document.querySelector('#file').value = '';
                const file = res.data.file;
                const fileSize = (file.size / 1024 / 1024).toFixed(2);
                const newFile = document.createElement("li");
                newFile.innerHTML = `<a href="#"
                rel="/entries/<%=entry._id%>/files/${file.storedFileName}" class="my-1 btn btn-danger btn-sm deleteFile">Delete</a> <a href="${file.url}" target="_blank">${file.originalFileName} - ${fileSize}MB</a>`;
                document.querySelector('#files ul').prepend(newFile);
                document.querySelector('#files a.deleteFile').addEventListener('click', deleteFile);
            };
        }).catch((err) => {
            console.log(err);
        });
    };

    const fileInput = document.querySelector('#file');
    fileInput.addEventListener('change', uploadFile);

    const deleteFile = async (event) => {
        event.preventDefault();
        event.stopPropagation();

        axios.delete(event.target.rel)
            .then((res) => {
                event.target.parentNode.remove();
            }).catch((err) => {
                console.log(err);
            });
    };

    const deleteAs = document.querySelectorAll('.deleteFile');

    for (let dA of deleteAs) {
        dA.addEventListener('click', deleteFile);
    }

</script>